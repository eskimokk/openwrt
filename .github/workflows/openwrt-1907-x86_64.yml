#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# 

name: OpenWrt-1907 x86_64 images

on:
  # schedule:
  #   - cron: 30 1 * * 3,6
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          echo "Deleting files, please wait ..."
          sudo rm -rf \
            /usr/share/dotnet \
            /etc/mysql \
            /etc/php
          sudo -E apt-get -y purge \
            azure-cli \
            ghc* \
            zulu* \
            hhvm \
            llvm* \
            firefox \
            google* \
            dotnet* \
            powershell \
            openjdk* \
            mysql* \
            php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          
      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      - name: Costom configure file
        run: |
          rm -f .config*
          mv config.my .config
          sed -i 's/^[ \t]*//g' .config
          make defconfig
          
      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
          
      - name: Compile firmware
        run: DEBIAN_FRONTEND=noninteractive make -j$(nproc) || make -j1 V=s

      - name: Prepare artifact
        run: |
          find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}
                
      - name: Upload artifact firmware ext4
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware - ext4 image
          path: ./bin/targets/x86/64/openwrt-x86-64-combined-ext4.img.gz

      - name: Upload artifact firmware squashfs
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware - squashfs image
          path: ./bin/targets/x86/64/openwrt-x86-64-combined-squashfs.img.gz

      - name: Upload artifact firmware vmdk
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware - ext4 vmdk
          path: ./bin/targets/x86/64/openwrt-x86-64-combined-ext4.vmdk

#      - name: Create release
#        if: github.event == 'push'
#        id: create_release
#        uses: actions/create-release@latest
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: false
#          prerelease: false
#
#      - name: Upload release asset
#        if: github.event == 'push'
#        id: upload-release-asset
#        uses: actions/upload-release-asset@latest
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./bin/targets/*/*/
#      
